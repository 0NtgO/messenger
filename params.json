{"tagline":"Alerts for the 21st century","google":"","note":"Don't delete this file! It's used internally to help with page regeneration.","body":"Hubspot Messaging Library\r\n=========================\r\n\r\nShow transactional messages in your app.\r\n\r\nRequires\r\n--------\r\n\r\n- jQuery\r\n- Backbone.js\r\n- jQuery.scrollTo.js - optionally\r\n\r\nPlays well with bootstrap\r\n\r\nIncluding\r\n--------\r\n\r\n### JS\r\n    messenger/build/js/jquery.messenger.js\r\n\r\n### CSS\r\n    messenger/build/css/messenger.css\r\n\r\nReally Quick Usage\r\n-----\r\n\r\n```coffeescript\r\n\r\n# Replace:\r\n$.ajax\r\n    url: \"/some-url\"\r\n    success: ->\r\n    \r\n# With:\r\n$.globalMessenger().do\r\n    errorMessage: \"This did not go well.\"\r\n,\r\n    url: \"/some-url\"\r\n    success: ->\r\n    \r\n```\r\n\r\nUsage\r\n-----\r\n\r\n```coffeescript\r\n\r\n$.globalMessenger().post \"Your request has succeded!\"\r\n\r\n$.globalMessenger().post\r\n    message: 'There was an explosion while processing your request.'\r\n    type: 'error'\r\n\r\nmsg = $.globalMessenger().post \"My Message\"\r\nmsg.update \"I changed my mind, this is my message\"\r\nmsg.hide()\r\n\r\n# Want to put actions at the end of your messages?\r\nmsg = $.globalMessenger().post\r\n    message: 'Launching thermonuclear war...'\r\n    type: 'info'\r\n    actions:\r\n        cancel:\r\n            label: 'cancel launch'\r\n            action: ->\r\n                msg.update\r\n                    message: 'Thermonuclear war averted'\r\n                    type: 'success'\r\n\r\n# Have an error? How about auto retrys with a Gmail-style countdown?:\r\nmsg = $.globalMessenger().post\r\n    message: \"I'm sorry Hal, I just can't do that.\"\r\n    actions:\r\n        retry:\r\n            label: 'retry now'\r\n            phrase: 'Retrying TIME'\r\n            auto: true\r\n            delay: 10\r\n            action: ->\r\n                # Do some retrying...\r\n\r\n        cancel:\r\n            action: ->\r\n                do msg.cancel\r\n\r\n# You can bind to action events as well:\r\nmsg.on 'action:retry', ->\r\n    alert('Hey, you retried!')\r\n\r\n# Need more control? You can bind events backbone-style based on the type of message.\r\nmsg.update\r\n    events:\r\n        'success click': ->\r\n            # Will fire when the user clicks the message in a success state.\r\n    \r\n        'error click a.awesome-class': ->\r\n            # Rock on\r\n\r\n# Need your message to hide after a while, or when the Backbone router changes the page?\r\n$.globalMessenger().post\r\n    message: \"Weeeeee\"\r\n\r\n    hideAfter: 10\r\n    hideOnNavigate: true\r\n\r\n# Don't want your message hidden on a long page? (Not necessary if you're using the default\r\n# fixed positioning)\r\nmsg = $.globalMessenger().post\r\n    message: \"You'll see me!\"\r\n    \r\n    scrollTo: true\r\n    # Requires jQuery scrollTo plugin\r\n\r\nmsg.scrollTo() # also works\r\n\r\n# Lazy/smart? How about messenger does it all for you?  All the retry magic comes with.\r\n$.globalMessenger().do\r\n    successMessage: 'Data saved.'\r\n    errorMessage: 'Error saving data'\r\n    progressMessage: 'Saving data' # Don't include messages you don't want to appear.\r\n\r\n    # Any standard message opts can go here\r\n,\r\n    # All the standard jQuery ajax options here\r\n\r\n    url: '/data'\r\n\r\n# Need to override the messages based on the response?\r\n$.globalMessenger().do\r\n    errorMessage: 'Oops'\r\n,\r\n    url: '/data'\r\n    error: (xhr) ->\r\n        # Whatever you return from your handlers will replace the default messages\r\n\r\n        if xhr?.status is 404\r\n            return \"Data not found\"\r\n        \r\n        # Return true or undefined for your predefined message\r\n        # Return false to not show any message\r\n\r\n        return true\r\n\r\n# Sometimes you only want to show the success message when a retry succeeds, not if a retry wasen't required:\r\n$.globalMessenger().do\r\n    successMessage: 'Successfully saved.'\r\n    errorMessage: 'Error saving'\r\n\r\n    showSuccessWithoutError: false\r\n,\r\n    url: '/data'\r\n\r\n# You don't have to use $.ajax as your action, messenger works great for any async process:\r\n$.globalMessenger().do\r\n    successMessage: 'Bomb defused successfully'\r\n\r\n    action: defuseBomb\r\n,\r\n    # You can put options for defuseBomb here\r\n    # It will be passed success and error callbacks\r\n\r\n# Need to hide all messages?\r\n$.globalMessenger().hideAll()\r\n\r\n# Do you use Backbone? Hook all backbone calls:\r\n$.globalMessenger().hookBackboneAjax()\r\n\r\n# You don't have to use the global messenger\r\n$('div#message-container').messenger().post \"My message\"\r\n\r\n# By default, the global messenger will create an ActionMessenger instance fixed to the bottom-right\r\n# corner of the screen.  If there is already a messenger instance on the page, it will use that one.\r\n\r\n# Alternativly, pass {injectIntoPage: true} to globalMessenger to have a messenger instance injected into the page in a few likely\r\n# places.  This will only work if an instance has not yet been created.\r\n\r\n$.globalMessenger({injectIntoPage: true})\r\n\r\n# All the options for globalMessenger and their defaults:\r\n\r\n{\r\n  'injectIntoPage': false,\r\n  'fixedMessageClasses': 'hs-fixed-message-box',\r\n  'injectedMessageClasses': 'hs-message-box',\r\n  'injectionLocations': ['.row-content', '.left', '.page', 'body']\r\n}\r\n\r\n# You can also use the views directly\r\nmessenger = new ActionMessenger $('div#message-container')\r\nmessenger.post \"Yay!!!\"\r\n\r\n```\r\n\r\nContributing\r\n==========\r\n\r\nYou can build the output files by running `build.sh`.  It requires coffeescript, sass and handlebars.\r\n","name":"Messenger"}